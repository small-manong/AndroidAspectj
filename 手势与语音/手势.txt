一个星期就行了。
OpenGL不是很简单的东西。
android不可能全部都学到，用的时候也是现抓。！！例如地图，面版。
Iphone也就一个星期的事吧。

对于触摸屏，其原生的消息无非按下、抬起、移动这几种，我们只需要简单重载onTouch或者设置触摸侦听器setOnTouchListener即可进行处理。不过，为了提高我们的APP的用户体验，有时候我们需要识别用户的手势，Android给我们提供的手势识别工具GestureDetector就可以帮上大忙了。
 
基础
GestureDetector的工作原理是，当我们接收到用户触摸消息时，将这个消息交给GestureDetector去加工，我们通过设置侦听器获得GestureDetector处理后的手势。
 
GestureDetector提供了两个侦听器接口，OnGestureListener处理单击类消息，OnDoubleTapListener处理双击类消息。
 
OnGestureListener的接口有这几个：
 
 
// 单击，触摸屏按下时立刻触发 
abstract boolean onDown(MotionEvent e); 
// 抬起，手指离开触摸屏时触发(长按、滚动、滑动时，不会触发这个手势) 
abstract boolean onSingleTapUp(MotionEvent e); 
// 短按，触摸屏按下后片刻后抬起，会触发这个手势，如果迅速抬起则不会 
abstract void onShowPress(MotionEvent e); 
// 长按，触摸屏按下后既不抬起也不移动，过一段时间后触发 
abstract void onLongPress(MotionEvent e); 
// 滚动，触摸屏按下后移动 
abstract boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY); 
// 滑动，触摸屏按下后快速移动并抬起，会先触发滚动手势，跟着触发一个滑动手势 
abstract boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY); 
OnDoubleTapListener的接口有这几个：
 
 
// 双击，手指在触摸屏上迅速点击第二下时触发 
abstract boolean onDoubleTap(MotionEvent e); 
// 双击的按下跟抬起各触发一次 
abstract boolean onDoubleTapEvent(MotionEvent e); 
// 单击确认，即很快的按下并抬起，但并不连续点击第二下 
abstract boolean onSingleTapConfirmed(MotionEvent e); 
 
有时候我们并不需要处理上面所有手势，方便起见，Android提供了另外一个类SimpleOnGestureListener实现了如上接口，我们只需要继承SimpleOnGestureListener然后重载感兴趣的手势即可。

也可以在自定义的View里面设置手势识别;
 this.setOnTouchListener(new OnTouchListener() { 
 
            public boolean onTouch(View v, MotionEvent event) { 
                return mGestureDetector.onTouchEvent(event); 
            } 
陷阱
 
对于自定义View，使用手势识别有两处陷阱可能会浪费你的不少时间。
 
1：View必须设置longClickable为true，否则手势识别无法正确工作，只会返回Down, Show, Long三种手势
 
2：必须在View的onTouchListener中调用手势识别，而不能像Activity一样重载onTouchEvent，否则同样手势识别无法正确工作

语音输入
